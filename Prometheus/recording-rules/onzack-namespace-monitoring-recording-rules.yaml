apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: onzack-namespace-monitoring
spec:
  groups:
  - name: cpu
    rules:
    - record: container_cpu_usage_seconds_total:sum_rate
      expr: sum(rate(container_cpu_usage_seconds_total{container!="", container!="POD"}[5m])) by (container,pod,namespace,node)
    - record: kube_pod_container_resource_requests:cpu:running
      expr: sum(kube_pod_container_resource_requests{resource="cpu"} * on(pod, namespace) group_left() (kube_pod_status_phase{phase="Running"}==1)) by (container,pod,namespace,node)
    - record: kube_pod_container_resource_limits:cpu:running
      expr: sum(kube_pod_container_resource_limits{resource="cpu"} * on(pod, namespace) group_left() (kube_pod_status_phase{phase="Running"}==1)) by (container,pod,namespace,node)
    - record: container_cpu_cfs_throttling:percent
      expr: |-
        100
        /
        sum(increase(container_cpu_cfs_periods_total{container!="", container!="POD"}[5m])) by (container,pod,namespace)
        *
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", container!="POD"}[5m])) by (container,pod,namespace)
  - name: memory
    rules:
    - record: container_memory_working_set_bytes:sum
      expr: sum(container_memory_working_set_bytes{container!="", container!="POD"}) by (container,pod,namespace,node) * on(pod, namespace) group_left() (kube_pod_status_phase{phase="Running"}==1)
    - record: kube_pod_container_resource_requests:memory:running
      expr: sum(kube_pod_container_resource_requests{resource="memory"} * on(pod, namespace) group_left() (kube_pod_status_phase{phase="Running"}==1)) by (container,pod,namespace,node)
    - record: kube_pod_container_resource_limits:memory:running
      expr: sum(kube_pod_container_resource_limits{resource="memory"} * on(pod, namespace) group_left() (kube_pod_status_phase{phase="Running"}==1)) by (container,pod,namespace,node)
  - name: storage
    rules:
    - record: container_fs_reads_bytes_total:sum_rate
      expr: sum(rate(container_fs_reads_bytes_total{container!=""}[5m])) by (container,pod,namespace,node)
    - record: container_fs_reads_total:sum_rate
      expr: sum(rate(container_fs_reads_total{container!="", container!="POD"}[5m])) by (container,pod,namespace,node)
    - record: container_fs_writes_bytes_total:sum_rate
      expr: sum(rate(container_fs_writes_bytes_total{container!=""}[5m])) by (container,pod,namespace,node)
    - record: container_fs_writes_total:sum_rate
      expr: sum(rate(container_fs_writes_total{container!="", container!="POD"}[5m])) by (container,pod,namespace,node)
  - name: network
    rules:
    - record: container_network_receive_bytes_total:rate
      expr: rate(container_network_receive_bytes_total[5m])
    - record: container_network_receive_packets_total:rate
      expr: rate(container_network_receive_packets_total[5m])
    - record: container_network_receive_packets_dropped_total:rate
      expr: rate(container_network_receive_packets_dropped_total[5m])
    - record: container_network_transmit_bytes_total:rate
      expr: rate(container_network_transmit_bytes_total[5m])
    - record: container_network_transmit_packets_total:rate
      expr: rate(container_network_transmit_packets_total[5m])
    - record: container_network_transmit_packets_dropped_total:rate
      expr: rate(container_network_transmit_packets_dropped_total[5m])
